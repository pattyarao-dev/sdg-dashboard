generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model indicator_var {
  currval BigInt?

  @@ignore
}

model md_computation_rule {
  rule_id               Int                    @id @default(autoincrement())
  goal_indicator_id     Int?
  goal_sub_indicator_id Int?
  formula               String
  td_goal_indicator     td_goal_indicator?     @relation(fields: [goal_indicator_id], references: [goal_indicator_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_goal_indicator")
  td_goal_sub_indicator td_goal_sub_indicator? @relation(fields: [goal_sub_indicator_id], references: [goal_sub_indicator_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_goal_sub_indicator")
}

model md_goal {
  goal_id           Int                 @id @default(autoincrement())
  name              String              @unique @db.VarChar(100)
  description       String?
  td_goal_indicator td_goal_indicator[]
}

model md_indicator {
  indicator_id         Int                    @id @default(autoincrement())
  name                 String                 @unique @db.VarChar(100)
  description          String?
  status               status
  md_sub_indicator     md_sub_indicator[]
  td_goal_indicator    td_goal_indicator[]
  td_project_indicator td_project_indicator[]
}

model md_location {
  location_id            Int                      @id @default(autoincrement())
  name                   String                   @unique @db.VarChar(100)
  td_project_location    td_project_location[]
  td_sub_indicator_value td_sub_indicator_value[]
}

model md_sub_indicator {
  sub_indicator_id         Int                        @id @default(autoincrement())
  parent_indicator_id      Int
  name                     String                     @unique @db.VarChar(100)
  description              String?
  status                   status
  parent_sub_indicator_id  Int?
  md_sub_indicator         md_sub_indicator?          @relation("md_sub_indicatorTomd_sub_indicator", fields: [parent_sub_indicator_id], references: [sub_indicator_id], onUpdate: NoAction, map: "fk_parent_sub_indicator")
  other_md_sub_indicator   md_sub_indicator[]         @relation("md_sub_indicatorTomd_sub_indicator")
  md_indicator             md_indicator               @relation(fields: [parent_indicator_id], references: [indicator_id], onDelete: Cascade, onUpdate: NoAction)
  td_goal_sub_indicator    td_goal_sub_indicator[]
  td_project_sub_indicator td_project_sub_indicator[]
}

model md_user {
  user_id                        Int                              @id @default(autoincrement())
  first_name                     String?                          @db.VarChar(45)
  last_name                      String?                          @db.VarChar(45)
  email                          String                           @unique @db.VarChar(45)
  password                       String                           @db.VarChar(255)
  md_user_role                   md_user_role[]
  td_indicator_value             td_indicator_value[]
  td_project_indicator_value     td_project_indicator_value[]
  td_project_sub_indicator_value td_project_sub_indicator_value[]
  td_required_data_value         td_required_data_value[]
  td_sub_indicator_value         td_sub_indicator_value[]
}

model md_user_role {
  user_id       Int
  user_type_id  Int
  md_user       md_user       @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)
  ref_user_type ref_user_type @relation(fields: [user_type_id], references: [user_type_id], onDelete: Cascade, onUpdate: NoAction)

  @@id([user_id, user_type_id])
}

model ref_required_data {
  required_data_id                    Int                                   @id @default(autoincrement())
  name                                String                                @unique @db.VarChar(100)
  td_goal_indicator_required_data     td_goal_indicator_required_data[]
  td_goal_sub_indicator_required_data td_goal_sub_indicator_required_data[]
  td_required_data_value              td_required_data_value[]
}

model ref_user_type {
  user_type_id Int            @id @default(autoincrement())
  name         String         @unique @db.VarChar(45)
  md_user_role md_user_role[]
}

model td_goal_indicator {
  goal_indicator_id               Int                               @id @default(autoincrement())
  goal_id                         Int
  indicator_id                    Int
  global_target_value             Float?
  global_baseline_value           Float?
  md_computation_rule             md_computation_rule[]
  md_goal                         md_goal                           @relation(fields: [goal_id], references: [goal_id], onDelete: Cascade, onUpdate: NoAction)
  md_indicator                    md_indicator                      @relation(fields: [indicator_id], references: [indicator_id], onDelete: Cascade, onUpdate: NoAction)
  td_goal_indicator_required_data td_goal_indicator_required_data[]
  td_goal_sub_indicator           td_goal_sub_indicator[]
  td_indicator_value              td_indicator_value[]
  td_project_indicator            td_project_indicator[]
  td_required_data_value          td_required_data_value[]

  @@unique([goal_id, indicator_id])
}

model td_goal_indicator_required_data {
  goal_indicator_required_data_id Int               @id @default(autoincrement())
  goal_indicator_id               Int
  required_data_id                Int
  td_goal_indicator               td_goal_indicator @relation(fields: [goal_indicator_id], references: [goal_indicator_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_goal_indicator")
  ref_required_data               ref_required_data @relation(fields: [required_data_id], references: [required_data_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_required_data")

  @@unique([goal_indicator_id, required_data_id], map: "unique_goal_indicator_required_data")
}

model td_goal_sub_indicator {
  goal_sub_indicator_id               Int                                   @id @default(autoincrement())
  goal_indicator_id                   Int
  sub_indicator_id                    Int
  global_target_value                 Float?
  global_baseline_value               Float?
  md_computation_rule                 md_computation_rule[]
  td_goal_indicator                   td_goal_indicator                     @relation(fields: [goal_indicator_id], references: [goal_indicator_id], onDelete: Cascade, onUpdate: NoAction)
  md_sub_indicator                    md_sub_indicator                      @relation(fields: [sub_indicator_id], references: [sub_indicator_id], onDelete: Cascade, onUpdate: NoAction)
  td_goal_sub_indicator_required_data td_goal_sub_indicator_required_data[]
  td_required_data_value              td_required_data_value[]
  td_sub_indicator_value              td_sub_indicator_value[]

  @@unique([goal_indicator_id, sub_indicator_id])
}

model td_goal_sub_indicator_required_data {
  goal_sub_indicator_required_data_id Int                   @id @default(autoincrement())
  goal_sub_indicator_id               Int
  required_data_id                    Int
  td_goal_sub_indicator               td_goal_sub_indicator @relation(fields: [goal_sub_indicator_id], references: [goal_sub_indicator_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_goal_sub_indicator")
  ref_required_data                   ref_required_data     @relation(fields: [required_data_id], references: [required_data_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_required_data_sub")

  @@unique([goal_sub_indicator_id, required_data_id], map: "unique_goal_sub_indicator_required_data")
}

model td_indicator_value {
  value_id          Int                @id @default(autoincrement())
  goal_indicator_id Int?
  value             Float
  measurement_date  DateTime           @default(now()) @db.Timestamp(6)
  location          String?            @db.VarChar(255)
  notes             String?
  created_by        Int
  md_user           md_user            @relation(fields: [created_by], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  td_goal_indicator td_goal_indicator? @relation(fields: [goal_indicator_id], references: [goal_indicator_id], onDelete: Cascade, onUpdate: NoAction)
}

model td_project {
  project_id           Int                    @id @default(autoincrement())
  name                 String                 @db.VarChar(100)
  description          String?
  project_status       project_status
  start_date           DateTime?              @db.Date
  end_date             DateTime?              @db.Date
  td_project_indicator td_project_indicator[]
  td_project_location  td_project_location[]
}

model td_project_indicator {
  project_indicator_id       Int                          @id @default(autoincrement())
  project_id                 Int
  indicator_id               Int?
  goal_indicator_id          Int
  project_target_value       Float?
  project_baseline_value     Float?
  project_location_id        Int?
  td_project_location        td_project_location?         @relation(fields: [project_location_id], references: [project_location_id], onUpdate: NoAction, map: "fk_project_location")
  td_goal_indicator          td_goal_indicator            @relation(fields: [goal_indicator_id], references: [goal_indicator_id], onDelete: Cascade, onUpdate: NoAction)
  md_indicator               md_indicator?                @relation(fields: [indicator_id], references: [indicator_id], onDelete: Cascade, onUpdate: NoAction)
  td_project                 td_project                   @relation(fields: [project_id], references: [project_id], onDelete: Cascade, onUpdate: NoAction)
  td_project_indicator_value td_project_indicator_value[]
  td_project_sub_indicator   td_project_sub_indicator[]
  td_required_data_value     td_required_data_value[]

  @@unique([project_id, indicator_id])
  @@unique([project_id, indicator_id, project_location_id], map: "unique_project_indicator_location")
}

model td_project_indicator_value {
  value_id             Int                  @id @default(autoincrement())
  goal_indicator_id    Int
  project_indicator_id Int
  value                Float
  measurement_date     DateTime?            @default(now()) @db.Timestamp(6)
  notes                String?
  created_by           Int
  project_location_id  Int?
  td_project_location  td_project_location? @relation(fields: [project_location_id], references: [project_location_id], onUpdate: NoAction, map: "fk_project_location_indicator_value")
  md_user              md_user              @relation(fields: [created_by], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  td_project_indicator td_project_indicator @relation(fields: [project_indicator_id], references: [project_indicator_id], onDelete: Cascade, onUpdate: NoAction)
}

model td_project_location {
  project_location_id            Int                              @id @default(autoincrement())
  project_id                     Int
  location_id                    Int
  td_project_indicator           td_project_indicator[]
  td_project_indicator_value     td_project_indicator_value[]
  md_location                    md_location                      @relation(fields: [location_id], references: [location_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_location")
  td_project                     td_project                       @relation(fields: [project_id], references: [project_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_project")
  td_project_sub_indicator_value td_project_sub_indicator_value[]

  @@unique([project_id, location_id], map: "unique_project_location")
}

model td_project_sub_indicator {
  project_sub_indicator_id       Int                              @id @default(autoincrement())
  project_indicator_id           Int
  sub_indicator_id               Int
  project_target_value           Float?
  project_baseline_value         Float?
  td_project_indicator           td_project_indicator             @relation(fields: [project_indicator_id], references: [project_indicator_id], onDelete: Cascade, onUpdate: NoAction)
  md_sub_indicator               md_sub_indicator                 @relation(fields: [sub_indicator_id], references: [sub_indicator_id], onDelete: Cascade, onUpdate: NoAction)
  td_project_sub_indicator_value td_project_sub_indicator_value[]

  @@unique([project_indicator_id, sub_indicator_id])
}

model td_project_sub_indicator_value {
  value_id                 Int                      @id @default(autoincrement())
  goal_sub_indicator_id    Int
  project_sub_indicator_id Int
  value                    Float
  measurement_date         DateTime?                @default(now()) @db.Timestamp(6)
  notes                    String?
  created_by               Int
  project_location_id      Int?
  td_project_location      td_project_location?     @relation(fields: [project_location_id], references: [project_location_id], onUpdate: NoAction, map: "fk_project_location_sub_indicator_value")
  md_user                  md_user                  @relation(fields: [created_by], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  td_project_sub_indicator td_project_sub_indicator @relation(fields: [project_sub_indicator_id], references: [project_sub_indicator_id], onDelete: Cascade, onUpdate: NoAction)
}

model td_required_data_value {
  value_id              Int                    @id @default(autoincrement())
  required_data_id      Int
  goal_indicator_id     Int?
  project_indicator_id  Int?
  sub_indicator_id      Int?
  value                 Float
  measurement_date      DateTime?              @default(now()) @db.Timestamp(6)
  location              String?                @db.VarChar(255)
  notes                 String?
  created_by            Int
  goal_sub_indicator_id Int?
  md_user               md_user                @relation(fields: [created_by], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_created_by")
  td_goal_indicator     td_goal_indicator?     @relation(fields: [goal_indicator_id], references: [goal_indicator_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_goal_indicator")
  td_goal_sub_indicator td_goal_sub_indicator? @relation(fields: [goal_sub_indicator_id], references: [goal_sub_indicator_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_goal_sub_indicator")
  td_project_indicator  td_project_indicator?  @relation(fields: [project_indicator_id], references: [project_indicator_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_project_indicator")
  ref_required_data     ref_required_data      @relation(fields: [required_data_id], references: [required_data_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_required_data_value")
}

model td_sub_indicator_value {
  value_id              Int                    @id @default(autoincrement())
  goal_sub_indicator_id Int?
  value                 Float
  measurement_date      DateTime               @default(now()) @db.Timestamp(6)
  location              String?                @db.VarChar(255)
  notes                 String?
  created_by            Int
  location_id           Int?
  md_location           md_location?           @relation(fields: [location_id], references: [location_id], onUpdate: NoAction, map: "fk_location_sub_indicator_value")
  md_user               md_user                @relation(fields: [created_by], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  td_goal_sub_indicator td_goal_sub_indicator? @relation(fields: [goal_sub_indicator_id], references: [goal_sub_indicator_id], onDelete: Cascade, onUpdate: NoAction)
}

enum project_status {
  ongoing
  complete
}

enum status {
  active
  disabled
}
